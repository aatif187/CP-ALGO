//Function to return a list containing elements of left view of the binary tree.
vector<int> leftView(Node *root)
{
   // Your code here
   vector<int>ans;
        queue<Node*>q;
        if(!root) return ans;
        q.push(root);
        while(!q.empty()){
            int sz=q.size();
            ans.push_back(q.front()->data);
            while(sz--){
            auto tp= q.front();
            q.pop();
            
            if(tp->left)q.push(tp->left);
            if(tp->right)q.push(tp->right);
        }
        }
        return ans;
}
 


/*

 void recursion(TreeNode *root, int level, vector<int> &res)
    {
        if(root==NULL) return ;
        if(res.size()==level) res.push_back(root->val);
        recursion(root->left, level+1, res);
        recursion(root->right, level+1, res);
        
    }
    
    vector<int> rightSideView(TreeNode *root) {
        vector<int> res;
        recursion(root, 0, res);
        return res;
    }
    
    */
